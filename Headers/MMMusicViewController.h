//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "IMusicMVPostDataServiceExt-Protocol.h"
#import "MMMusicAlbumRtnExt-Protocol.h"
#import "MMMusicDotMVDataSourceDelegate-Protocol.h"
#import "MMMusicLiveCGIMgrDelegate-Protocol.h"
#import "MMMusicLiveCommentLikeOperationHandler-Protocol.h"
#import "MMMusicLiveViewControllerDelegate-Protocol.h"
#import "MMMusicLyricsRtnExt-Protocol.h"
#import "MMMusicMVEditorViewControllerDelegate-Protocol.h"
#import "MMMusicMVMiniTransitionControllerDelegate-Protocol.h"
#import "MMMusicMVPlayerBgViewDelegate-Protocol.h"
#import "MMMusicMVRecommendViewControllerDataSource-Protocol.h"
#import "MMMusicVCCacheMgrProtocol-Protocol.h"
#import "MMMusicViewSharingTransitionAdaptedViewController-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"
#import "WCFinderCommentDetailViewControllerDelegate-Protocol.h"
#import "WCFinderDataItemExt-Protocol.h"
#import "WCFinderFeedContentVMExt-Protocol.h"

@class MMMusicDotMVDataSource, MMMusicInfo, MMMusicLiveBaseMsg, MMMusicLiveCGIMgr, MMMusicLiveViewController, MMMusicMVEditorViewController, MMMusicMVMiniTransitionController, MMMusicMVPlayerBgView, MMMusicMVRecommendViewController, MMMusicVCOpenParams, MVEditStatInfo, NSArray, NSMutableArray, NSString, UIViewController, WCFinderFeedContentVM;

@interface MMMusicViewController : MMUIViewController <MMMusicMVMiniTransitionControllerDelegate, MMMusicAlbumRtnExt, MMMusicLyricsRtnExt, MMMusicLiveViewControllerDelegate, MMMusicMVEditorViewControllerDelegate, MMMusicMVPlayerBgViewDelegate, MMMusicLiveCGIMgrDelegate, MMMusicLiveCommentLikeOperationHandler, WCActionSheetDelegate, MMMusicDotMVDataSourceDelegate, MMMusicViewSharingTransitionAdaptedViewController, IMusicMVPostDataServiceExt, WCFinderCommentDetailViewControllerDelegate, WCFinderFeedContentVMExt, MMMusicMVRecommendViewControllerDataSource, WCFinderDataItemExt, MMMusicVCCacheMgrProtocol>
{
    unsigned int m_uiCreateTime;
    _Bool m_hasPushedSystemInfo;
    unsigned int m_currentAudienceCount;
    MMMusicLiveCGIMgr *_cgiMgr;
    _Bool m_isSliding;
    double m_curMusicTimeInMs;
    double m_curMusicTimeInMsWhenBeginDragging;
    MMMusicVCOpenParams *_openParams;
    _Bool _bResumeMusicAfterBackFrom3rdApp;
    MMMusicLiveBaseMsg *_tappedBaseMsg;
    _Bool _bAppear;
    _Bool _isLoadingRecommendedModels;
    WCFinderFeedContentVM *_commentFinderFeedContentVM;
    double _pauseAtPosWhenAppearInNestingFeature;
    _Bool _isModelSwitchAnimating;
    _Bool _hasRequestedDataForEmptyMV;
    _Bool _hasRequestedPermissionAndJoin;
    _Bool _hasRequestedDataAfterModelRequested;
    _Bool _hasFinishedMVModelRequest;
    _Bool _isOpeningCommentList;
    _Bool _hasGetSongStatusResponse;
    _Bool _hasPouredMusicFeedStart;
    _Bool _markedVideoOffsetDirty;
    _Bool _wasConsumedEditor;
    _Bool _wasConsumedComment;
    _Bool _wasConsumedSlider;
    _Bool _notFirstReload;
    MMMusicMVMiniTransitionController *_transitionController;
    NSString *_chatRoomSongId;
    MMMusicDotMVDataSource *_mvDataSource;
    NSString *_songId;
    MMMusicInfo *_musicInfo;
    MMMusicMVPlayerBgView *_mvPlayerView;
    UIViewController *_currentTopViewController;
    NSMutableArray *_recommendedModels;
    MMMusicLiveViewController *_liveViewController;
    MMMusicMVEditorViewController *_editorViewController;
    NSString *_curVideoUsrName;
    MVEditStatInfo *_editFinishStatInfo;
    NSString *_sessionID;
    NSMutableArray *_onlineCountInfos;
    double _lastStartRecordOnlineCountTimestamp;
    unsigned long long _maxOnlineCount;
    unsigned long long _minOnlineCount;
    double _lastTotalDuration;
    double _lastStartTimestamp;
    double _lastMVTotalDuration;
    double _lastMVStartTimestamp;
    MMMusicMVRecommendViewController *_mvRecommendViewController;
    NSString *_taskBizKey;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *taskBizKey; // @synthesize taskBizKey=_taskBizKey;
@property(retain, nonatomic) MMMusicMVRecommendViewController *mvRecommendViewController; // @synthesize mvRecommendViewController=_mvRecommendViewController;
@property(nonatomic) _Bool notFirstReload; // @synthesize notFirstReload=_notFirstReload;
@property(nonatomic) _Bool wasConsumedSlider; // @synthesize wasConsumedSlider=_wasConsumedSlider;
@property(nonatomic) double lastMVStartTimestamp; // @synthesize lastMVStartTimestamp=_lastMVStartTimestamp;
@property(nonatomic) double lastMVTotalDuration; // @synthesize lastMVTotalDuration=_lastMVTotalDuration;
@property(nonatomic) _Bool wasConsumedComment; // @synthesize wasConsumedComment=_wasConsumedComment;
@property(nonatomic) _Bool wasConsumedEditor; // @synthesize wasConsumedEditor=_wasConsumedEditor;
@property(nonatomic) double lastStartTimestamp; // @synthesize lastStartTimestamp=_lastStartTimestamp;
@property(nonatomic) double lastTotalDuration; // @synthesize lastTotalDuration=_lastTotalDuration;
@property(nonatomic) unsigned long long minOnlineCount; // @synthesize minOnlineCount=_minOnlineCount;
@property(nonatomic) unsigned long long maxOnlineCount; // @synthesize maxOnlineCount=_maxOnlineCount;
@property(nonatomic) double lastStartRecordOnlineCountTimestamp; // @synthesize lastStartRecordOnlineCountTimestamp=_lastStartRecordOnlineCountTimestamp;
@property(retain, nonatomic) NSMutableArray *onlineCountInfos; // @synthesize onlineCountInfos=_onlineCountInfos;
@property(retain, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) MVEditStatInfo *editFinishStatInfo; // @synthesize editFinishStatInfo=_editFinishStatInfo;
@property(nonatomic) _Bool markedVideoOffsetDirty; // @synthesize markedVideoOffsetDirty=_markedVideoOffsetDirty;
@property(nonatomic) _Bool hasPouredMusicFeedStart; // @synthesize hasPouredMusicFeedStart=_hasPouredMusicFeedStart;
@property(nonatomic) _Bool hasGetSongStatusResponse; // @synthesize hasGetSongStatusResponse=_hasGetSongStatusResponse;
@property(nonatomic) _Bool isOpeningCommentList; // @synthesize isOpeningCommentList=_isOpeningCommentList;
@property(nonatomic) _Bool hasFinishedMVModelRequest; // @synthesize hasFinishedMVModelRequest=_hasFinishedMVModelRequest;
@property(nonatomic) _Bool hasRequestedDataAfterModelRequested; // @synthesize hasRequestedDataAfterModelRequested=_hasRequestedDataAfterModelRequested;
@property(nonatomic) _Bool hasRequestedPermissionAndJoin; // @synthesize hasRequestedPermissionAndJoin=_hasRequestedPermissionAndJoin;
@property(nonatomic) _Bool hasRequestedDataForEmptyMV; // @synthesize hasRequestedDataForEmptyMV=_hasRequestedDataForEmptyMV;
@property(retain, nonatomic) NSString *curVideoUsrName; // @synthesize curVideoUsrName=_curVideoUsrName;
@property(nonatomic) _Bool isModelSwitchAnimating; // @synthesize isModelSwitchAnimating=_isModelSwitchAnimating;
@property(retain, nonatomic) MMMusicMVEditorViewController *editorViewController; // @synthesize editorViewController=_editorViewController;
@property(retain, nonatomic) MMMusicLiveViewController *liveViewController; // @synthesize liveViewController=_liveViewController;
@property(retain, nonatomic) NSMutableArray *recommendedModels; // @synthesize recommendedModels=_recommendedModels;
@property(retain, nonatomic) UIViewController *currentTopViewController; // @synthesize currentTopViewController=_currentTopViewController;
@property(retain, nonatomic) MMMusicMVPlayerBgView *mvPlayerView; // @synthesize mvPlayerView=_mvPlayerView;
@property(retain, nonatomic) MMMusicInfo *musicInfo; // @synthesize musicInfo=_musicInfo;
@property(retain, nonatomic) NSString *songId; // @synthesize songId=_songId;
@property(retain, nonatomic) MMMusicDotMVDataSource *mvDataSource; // @synthesize mvDataSource=_mvDataSource;
@property(retain, nonatomic) NSString *chatRoomSongId; // @synthesize chatRoomSongId=_chatRoomSongId;
@property(retain, nonatomic) MMMusicMVMiniTransitionController *transitionController; // @synthesize transitionController=_transitionController;
- (void)handleNestingFeatureWithState:(unsigned long long)arg1 musicInfo:(id)arg2 errInfo:(id)arg3;
- (void)onFinderDataItemCommentLikeStatusChangeWithTid:(id)arg1 commentID:(unsigned long long)arg2 likeStatus:(_Bool)arg3;
- (void)onFinderDataItemDeleteComment:(id)arg1 rootCommentID:(unsigned long long)arg2 tid:(id)arg3;
- (void)onFinderDataItemPostComment:(id)arg1 tid:(id)arg2;
- (void)onMusicLiveMVLikeWithMVModel:(id)arg1 isSuccess:(_Bool)arg2;
- (void)onFeedContent:(id)arg1 commentDataChanged:(id)arg2;
- (void)setPushedFromType:(int)arg1;
- (void)clickCommentNickname:(id)arg1 username:(id)arg2 contact:(id)arg3 isWeChatFriend:(_Bool)arg4 dataItem:(id)arg5;
- (void)reportFullStatsImmediately;
- (void)pourForwardStat;
- (void)pourMusicFeedStartStat;
@property(readonly) _Bool isMVRecommendListLoading;
@property(readonly) NSArray *mvModelsForMVRecommendedViewController;
@property(readonly) unsigned long long totalMVModelsCountForMVRecommendedViewController;
- (void)onMVPostDataServicePostMVFailedWithLocalId:(id)arg1;
- (void)onMVPostDataServicePostMVSuccess:(id)arg1 svrDataItem:(id)arg2 localId:(id)arg3;
- (void)onMusicLiveCheckPermissionWithIsSuccess:(_Bool)arg1 canCreate:(_Bool)arg2 songId:(id)arg3 statusVerifyInfo:(id)arg4;
- (void)onMusicLiveGetSongStatusWithIsSuccess:(_Bool)arg1 resp:(id)arg2;
- (void)onMusicMVCGISerivceGetMvInfoFailWithObjectId:(unsigned long long)arg1 failureType:(unsigned long long)arg2 errMsg:(id)arg3;
- (void)onMusicMVCGISerivceGetMvInfoSuccessWithMVModel:(id)arg1 objectId:(unsigned long long)arg2;
- (void)onMusicPlayStatusChanged;
- (void)onMusicPlayInnerStatusChanged:(unsigned long long)arg1 musicInfo:(id)arg2 errInfo:(id)arg3;
- (void)deleteCurrentMV;
- (void)doLikeMVOperation:(_Bool)arg1;
- (void)updateCurrentVideoFinderAuthorInfo;
- (void)switchToMVModelAnimated:(id)arg1 directionIsLeft:(_Bool)arg2 scene:(unsigned long long)arg3;
- (void)reloadDataWithMVModel:(id)arg1 seekToStart:(_Bool)arg2 scene:(unsigned long long)arg3;
- (void)requestRecommendedList;
- (void)requestDurationRequiredDataIfAvailable;
- (void)setInteractivePopEnabled:(_Bool)arg1;
- (id)currUinNickName;
- (id)currUin;
- (void)seekMusicToDotStart;
- (void)getVideoUrlFromTrackItem:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)startPreloadNextVideo:(unsigned long long)arg1;
- (void)onMusicLiveGetBeatTracks:(id)arg1;
- (void)onMusicLiveGetMVRecommentList:(id)arg1 continueFlag:(_Bool)arg2 requestId:(id)arg3;
- (void)onMusicLivePostMsgIsSuccess:(_Bool)arg1 newMsg:(id)arg2 songId:(id)arg3 errMsg:(id)arg4;
- (void)onMusicLiveGetHotMsgList:(id)arg1 songId:(id)arg2;
- (void)updateOnlineCount:(unsigned int)arg1;
- (void)onMusicLiveHeartBeatRespWithOnlineCount:(unsigned int)arg1 songId:(id)arg2 bSuccess:(_Bool)arg3;
- (void)onMusicLiveJoinWithSongId:(id)arg1 isSuccess:(_Bool)arg2;
- (void)handleLiveCommentLikeOperation:(_Bool)arg1 withModel:(id)arg2;
- (void)onMVEditorViewControllerCreatedMVFinished:(id)arg1 isDraft:(_Bool)arg2 statInfo:(id)arg3;
- (void)onDotMvDataSourceCurrDotIndexChangedFromIndex:(unsigned int)arg1 toIndex:(unsigned int)arg2 playedTimeInMs:(unsigned int)arg3 videoTimeOffset:(double)arg4;
- (void)onDotMvDataSourcePlayedTimeChanged:(unsigned int)arg1;
- (void)checkVideoStatus:(unsigned int)arg1;
- (_Bool)shouldPlayVideo;
- (void)updateUIWhenEndDragging;
- (void)updateUIWhenBeginDragging;
- (void)updateStatusWhenIndexChanged:(unsigned int)arg1 videoTimeOffset:(double)arg2;
- (void)onDeleteMVExposed;
- (void)onShareActionSuccess;
- (void)onLiveVCTransitToMVWithMsg:(id)arg1;
- (void)onLiveVCSendCommentWithContent:(id)arg1;
- (void)onShareToFriends:(id)arg1;
- (void)onShareToWc;
- (void)onOpenMusicInfo;
- (void)onOpenStatusSetting;
- (void)onOpen3rdMusicAppWithType:(unsigned long long)arg1 source:(unsigned long long)arg2;
- (void)onToggleLikeMVStatus;
- (void)onClickComment;
- (void)openCommentListWithRefCommentID:(unsigned long long)arg1;
- (void)onClickRetryPostMV;
- (void)onClickDeleteMV;
- (void)onClickCreateMV;
- (void)onLiveVCMusicResume:(double)arg1;
- (void)onLiveVCMusicPause:(double)arg1;
- (void)onLiveVCMusicSliderDidClick:(double)arg1;
- (void)onLiveVCMusicSliderDidSeek:(double)arg1;
- (void)onLiveVCMusicSliderProgressChanged:(double)arg1 isSliding:(_Bool)arg2;
- (void)OnGetLyrics:(id)arg1 Lyrics:(id)arg2;
- (void)OnGetSongAlbumUrl:(id)arg1 AlbumUrl:(id)arg2;
- (void)onPageScroll;
- (void)musicMVPlayerOnHorizontalSwipeWithDirection:(_Bool)arg1;
- (void)musicMVPlayerOnHideBufferingView;
- (void)musicMVPlayerOnShowBufferingView;
- (void)onClickOpenRecommendedMVList;
- (void)musicMVPlayerOnLikeWithGestureRecognizer:(id)arg1 inView:(id)arg2;
- (void)musicMVPlayerOnLikeOperation;
- (_Bool)onShouldMenuShowComplain;
- (id)onLiveVCGetMusicShareItem;
- (void)onAuthorInfoViewClickSwitch;
- (void)onAuthorInfoViewClickFinderHitLabel;
- (void)onAuthorInfoViewClickMVNickName;
- (void)onAuthorInfoViewClickMVAvatar;
- (_Bool)isEnterFromFinder;
- (void)pushFinderProfileWithUsername:(id)arg1;
- (void)musicMVPlayerOnClickMVHeadImg;
- (void)musicMVPlayerOnClickMVNickname;
- (void)musicMVPlayerOnVideoToggleJumpFinderProfileOperation:(id)arg1;
- (void)musicMVPlayerOnTappedVideo;
- (void)musicMVPlayerOnVideoTogglePostOperation;
- (void)muiscMVPlayerOnTryPostVideo;
- (void)musicMVPlayerWillDisplayEpisodeView:(id)arg1 ofIndex:(unsigned long long)arg2;
- (void)musicMVPlayerDidEndDragging;
- (double)calculateProgressFromTranslationX:(double)arg1;
- (void)musicMVPlayerDidDragWithTranslation:(double)arg1;
- (void)musicMVPlayerWillBeginDragging;
- (double)musicMVPlayerTrackPlayOffsetAtIndex:(unsigned long long)arg1;
- (id)musicMVPlayerTrackItemAtIndex:(unsigned long long)arg1;
- (long long)numberOfMusicMVTracks;
- (_Bool)handleErrorState:(unsigned long long)arg1 musicInfo:(id)arg2 errInfo:(id)arg3;
- (void)viewDidLayoutSubviews;
- (void)appWillEnterForeground:(id)arg1;
- (void)viewDidBePopedOrDismissed:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)playCurMusicWhenAppear;
- (_Bool)useTransparentNavibar;
- (void)initData;
- (void)initView;
- (_Bool)hasActiveMusicVCInCurNavVC;
- (void)onAllMusicVCRemoved;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidLoad;
- (id)getSessionID;
- (double)mvTotalDuration;
- (double)totalDuration;
- (id)initWithOpenParams:(id)arg1;
- (void)dealloc;
- (id)mmNavigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)mmNavigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (id)minimizationInteractivePopGetPendingTaskContextWithGenerateType:(int)arg1;
- (id)minimizationTaskData;
- (void)minimizationInteractivePopToMinimizeTask:(_Bool)arg1;
- (void)minimizationInteractivePopGestureRecognizerDidBegin;
- (void)hideOrShowVisibleCellVideoPlayerView:(_Bool)arg1;
- (void)transitToViewController:(id)arg1 animator:(id)arg2 beforeTransition:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setupEditorViewControlleIfNeeded;
- (void)setupLiveViewControllerIfNeeded;
- (id)transitionAnimatorWithSharingViews:(id)arg1;
- (id)defaultTransitionAnimator;
- (void)presentEditorViewController;
- (void)transitToLiveViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

